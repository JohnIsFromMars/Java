package palindrome;
// Video 8
// New method: System.exit(0) = Represents a successful termination
public class Palindrome1 {

	public static void main(String[] args) {
		String x = "India";
		
		char y[] = x.toCharArray(); // 1. A method that converts a string into a sequence of characters that is inserted into an array
		int size = y.length; 		// 2. A method that returns the number of arrays
		char a[] = new char[size]; 	// 3. A new array named 'a' is constructed with the same number of elements as array 'y'
		int i = 0;
		while(i != size)			// 4. Loop will repeatedly execute so long as the value at variable 'i' does not equal the value of "size"
		{
			a[size -1 -i] = y[i];   // 5. A palindrome is created 
			++i;
		}
		i = 0;						// 6. i must be reset back to 0
		System.out.println(a);
		System.out.println(y);
		while(i != size)
		{
			if (a[i]!= y[i])		// 7. If the value of the element at index 0 does not equal the value of y[i] at index 0....
				{		
					System.out.println("Not a palindrome");	 //8. A palindrome is a word that is the same even when reversed. 
																 // if, the value at index 0 is not the same, its not a palindrome. 
					System.exit(0);							 // 9. Executes successful termination of the program
				}
			else												 // 10. Else means the 1st values are the same, meaning it is a palindrome
				{
					i++;										 // 11. The next index is selected
					continue;									 // 12. While loop repeats again
				}
			}
		System.out.println("Palindrome");
		}
		
		
	}


